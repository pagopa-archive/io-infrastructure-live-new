{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0-draft2",
    "title": "IO BONUS API",
    "description": "# IO API for Bonus Vacanze\n"
  },
  "host": "${host}",
  "basePath": "/api/bonus-vacanze/v1",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "SubscriptionKey": []
    }
  ],
  "securityDefinitions": {
    "SubscriptionKey": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/redeemed": {
      "post": {
        "operationId": "setBonusesAsRedeemed",
        "summary": "Set bonuses status to redeemed",
        "description": "TDB",
        "parameters": [
          {
            "name": "redeemed_bonuses",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RedeemedBonuses"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted",
            "schema": {
              "$ref": "#/definitions/RequestAccepted"
            }
          },
          "400": {
            "description": "Invalid payload",
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProblemJson": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "uri",
          "description": "An absolute URI that identifies the problem type. When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).",
          "default": "about:blank",
          "example": "https://example.com/problem/constraint-violation"
        },
        "title": {
          "type": "string",
          "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.",
          "minimum": 100,
          "maximum": 600,
          "exclusiveMaximum": true,
          "example": 200
        },
        "detail": {
          "type": "string",
          "description": "A human readable explanation specific to this occurrence of the\nproblem.",
          "example": "There was an error processing the request"
        },
        "instance": {
          "type": "string",
          "format": "uri",
          "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced."
        }
      }
    },
    "RequestAccepted": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "OK"
          ]
        }
      }
    },
    "BonusCode": {
      "type": "string"
    },
    "RedeemedBonus": {
      "type": "object",
      "properties": {
        "bonus_code": {
          "$ref": "#/definitions/BonusCode"
        },
        "redeemed_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "bonus_code",
        "redeemed_at"
      ]
    },
    "RedeemedBonuses": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedeemedBonus"
          }
        }
      },
      "required": [
        "items"
      ]
    }
  }
}
